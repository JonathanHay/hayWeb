{"version":3,"sources":["components/aboutpage.js","components/newsitemdetails.js","components/newsitem.js","components/newspage.js","components/resumepage.js","components/projectitem.js","components/projectspage.js","components/footer.js","components/firebase.js","components/nav.js","components/pageheader.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","$","animate","scrollTop","offset","top","_this2","react_default","a","createElement","className","Grid","Row","Header","size","centered","style","width","columns","textAlign","Column","Divider","onClick","but","Segment","inverted","color","class","Icon","name","Component","NewsItemDetails","modalOpen","handleOpen","bind","assertThisInitialized","handleClose","setState","thumb","Button","Modal","trigger","selectTrigger","open","onClose","backgroundColor","height","display","title","float","date","Content","divided","Image","fluid","objectFit","alt","src","image","body","minHeight","additional","NewsItem","fontSize","showDetails","deletePost","renderThumb","renderNotThumb","adminView","del","i","detailsModal","el","content","x","admin","Container","id","components_newsitemdetails","ref","Reveal","animated","visible","hidden","Card","Meta","NewsPage","items","selected","description","savePost","updateTit","updateImg","updateDes","selectItem","CurrentItem","moveSelect","load","result","fetch","then","response","json","res","newsitem","temp","length","push","_id","td","Date","toString","substr","method","headers","Content-Type","JSON","stringify","data","post","e","target","value","delID","splice","components_newsitem","_this3","celled","paddingTop","paddingBottom","List","overflowY","overflowX","slice","reverse","map","item","index","Item","padding","key","sel","select","Input","onChange","placeholder","TextArea","minWidth","maxWidth","maxHeight","ResumePage","indent","paddingLeft","pad","project","lineHeight","listItem","relaxed","padded","stretched","as","marginBottom","ProjectItem","ProjectPage","components_projectitem","Footer","vertical","margin","stackable","link","href","section","horizontal","window","location","reload","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","Nav","user","email","password","errorMessage","handleButton","openModal","closeModal","renderLogin","login","logout","displayUser","updateE","updateP","displayError","onAuthStateChanged","u","signInWithEmailAndPassword","catch","message","_this4","signOut","Menu","Message","negative","_this5","para","components_aboutpage","components_newspage","components_projectspage","components_resumepage","modal","basic","closeIcon","verticalAlign","Form","stacked","icon","iconPosition","type","pointing","secondary","active","floated","components_footer","PageHeader","document","getElementById","opacity","visibility","marginTop","App","components_pageheader","components_nav","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7f9c91a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./styles/aboutpage.css\";\r\nimport { Grid, Segment, Icon, Header, Divider } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass AboutPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".AboutPage\").offset().top\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"AboutPage\">\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <h1>\r\n                            <Header>Hi, My name is Jonathan Hay...</Header>\r\n                        </h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <h2>\r\n                            <Header size=\"large\">About Me</Header>\r\n                        </h2>\r\n                        <p>\r\n                            I am a third year Software Engineering student at Western University. I am a <strong>hard working</strong>, <strong>willing-to-learn</strong> student\r\n                            with an <strong>intense drive to succeed</strong>. I am an avid gamer, a car enthusiast, a movie lover, and have a pet parrotlet named Harry.\r\n                        </p>\r\n                        <Grid centered style={{ width: \"100%\" }}>\r\n                            <Grid columns=\"equal\" style={{ width: \"50%\" }}>\r\n                                <Grid.Row style={{ textAlign: \"center\" }}>\r\n                                    <Grid.Column>\r\n                                        <h2>\r\n                                            <Header size=\"large\">More</Header>\r\n                                        </h2>\r\n                                        <Divider></Divider>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Grid.Column>\r\n                                        <a onClick={() => { this.props.but(2) }}>\r\n                                            <Segment inverted color=\"teal\" class=\"drop\">\r\n                                                <h3>Projects</h3>\r\n                                                <Icon inverted size=\"massive\" name=\"newspaper outline\"></Icon>\r\n                                            </Segment>\r\n                                        </a>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <a onClick={() => { this.props.but(1) }}>\r\n                                            <Segment inverted color=\"teal\" class=\"drop\">\r\n                                                <h3>News</h3>\r\n                                                <Icon inverted size=\"massive\" name=\"code\"></Icon>\r\n                                            </Segment>\r\n                                        </a>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Grid.Column>\r\n                                        <a onClick={() => { this.props.but(4) }}>\r\n                                            <Segment inverted color=\"teal\" class=\"drop\">\r\n                                                <h3>Contact</h3>\r\n                                                <Icon inverted size=\"massive\" name=\"chat\"></Icon>\r\n                                            </Segment>\r\n                                        </a>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <a onClick={() => { this.props.but(3) }}>\r\n                                            <Segment inverted color=\"teal\" class=\"drop\">\r\n                                                <h3>Resume</h3>\r\n                                                <Icon inverted size=\"massive\" name=\"clipboard outline\"></Icon>\r\n                                            </Segment>\r\n                                        </a>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid.Row>\r\n                </Grid >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React, { Component } from 'react';\r\nimport \"./styles/newsitemdetails.css\";\r\nimport { Modal, Grid, Button, Icon, Image } from \"semantic-ui-react\";\r\n\r\nclass NewsItemDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false\r\n        };\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    selectTrigger() {\r\n        if (this.props.thumb) {\r\n            return null;\r\n        } else {\r\n            return <Grid.Row centered><Button onClick={this.handleOpen} color=\"blue\">Details&nbsp;</Button></Grid.Row>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewsItemDetails\">\r\n                <Modal style={{ width: \"66vw\" }}\r\n                    trigger={this.selectTrigger()}\r\n                    open={this.state.modalOpen}\r\n                    onClose={this.handleClose}>\r\n                    <Modal.Header style={{ backgroundColor: \"#1b1c1d\", height: \"8vw\" }}>\r\n                        <h1 style={{ display: \"inline\", color: \"whitesmoke\" }} >{this.props.title}</h1>\r\n                        <Button onClick={this.handleClose} style={{ textAlign: \"center\", float: \"right\" }} color=\"red\"><Icon style={{ display: \"inline-block\", textAlign: \"right\" }} name='close' /></Button>\r\n                        <p style={{ color: \"white\" }} >posted {this.props.date}</p>\r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                        <Grid columns=\"equal\">\r\n                            <Grid.Row centered>\r\n                                <Grid divided='vertically' columns=\"equal\" style={{ width: \"66vw\" }}>\r\n                                    <Grid.Row divided style={{ height: \"25vw\", width: \"100%\", backgroundColor: \"whitesmoke\" }} centered>\r\n                                        <Grid.Column>\r\n                                            <Image fluid style={{ height: \"22vw\", width: \"100%\", objectFit: \"contain\" }} alt=\"\" src={this.props.image}></Image>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <p>{this.props.body}</p>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered style={{ minHeight: \"10vw\" }}>\r\n                                        <p>{this.props.additional}</p>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsItemDetails;","import React, { Component } from 'react';\r\nimport \"./styles/newsitem.css\";\r\nimport NewsItemDetails from \"./newsitemdetails\";\r\nimport { Modal, Grid, Button, Icon, Card, Reveal, Header, Image, Container } from \"semantic-ui-react\";\r\n\r\nclass NewsItem extends Component {\r\n    //Additional will be on standalone page\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (props.thumb === true) {\r\n            this.state = {\r\n                style: {\r\n                    fontSize: \"1em\",\r\n                    height: \"14em\",\r\n                },\r\n                showDetails: false\r\n            };\r\n        } else {\r\n            this.state = {\r\n                style: {\r\n                    width: \"100%\",\r\n                    height: \"30em\"\r\n                },\r\n                showDetails: false\r\n            };\r\n        }\r\n\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.renderThumb = this.renderThumb.bind(this);\r\n        this.renderNotThumb = this.renderNotThumb.bind(this);\r\n        this.showDetails = this.showDetails.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.del(this.props.i);\r\n        this.handleClose();\r\n    }\r\n\r\n    showDetails() {\r\n        this.detailsModal.handleOpen();\r\n    }\r\n\r\n    renderNotThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return null;\r\n        } else {\r\n            return el.content;\r\n        }\r\n    }\r\n    renderThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return el.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewsItem\" style={this.state.style}>\r\n                <Grid centered>\r\n                    <Container style={this.state.style}>\r\n                        <this.renderThumb style={{ height: \"inherit\" }} content={\r\n                            <div>\r\n                                <a onClick={this.showDetails}>\r\n                                    <h2><Header>{this.props.title}</Header></h2>\r\n                                    <Image style={{ height: \"10em\", width: \"90%\" }} id=\"image\" src={this.props.image} fluid centered></Image>\r\n                                </a>\r\n                                <NewsItemDetails title={this.props.title} body={this.props.body} additional={this.props.additional} image={this.props.image} date={this.props.date} thumb={true} ref={(ref) => { this.detailsModal = ref; }}></NewsItemDetails>\r\n                            </div>\r\n                        }></this.renderThumb>\r\n                        <this.renderNotThumb content={\r\n                            <div>\r\n                                <h1><Header>{this.props.title}</Header></h1>\r\n                                <Reveal animated=\"move right\" >\r\n                                    <Reveal.Content visible>\r\n                                        <Image id=\"image\" style={{ height: \"20em\", width: \"50em\" }} src={this.props.image} centered fluid></Image>\r\n                                    </Reveal.Content>\r\n                                    <Reveal.Content hidden>\r\n                                        <p>{this.props.body}</p>\r\n                                        <NewsItemDetails title={this.props.title} body={this.props.body} additional={this.props.additional} image={this.props.image} date={this.props.date} thumb={false}></NewsItemDetails>\r\n                                    </Reveal.Content>\r\n                                </Reveal>\r\n                            </div>\r\n                        }></this.renderNotThumb>\r\n                        <Card.Meta class=\"meta\">\r\n                            Posted {this.props.date}\r\n                        </Card.Meta>\r\n                        <this.renderNotThumb content={\r\n                            <this.adminView content={\r\n                                <Modal style={{ width: \"20vw\" }}\r\n                                    trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"red\">Delete Post&nbsp;<Icon name='minus' /></Button></Grid.Row>}\r\n                                    open={this.state.modalOpen}\r\n                                    onClose={this.handleClose}>\r\n                                    <Modal.Header>Delete Post</Modal.Header>\r\n                                    <Modal.Content>\r\n                                        <Grid columns=\"equal\">\r\n                                            <Grid.Row centered>\r\n                                                Are you SURE?\r\n                                    </Grid.Row>\r\n                                            <Grid.Row centered>\r\n                                                <Button onClick={this.deletePost} style={{ textAlign: \"center\" }} color=\"orange\">Confirm&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Modal.Content>\r\n                                </Modal>\r\n                            }></this.adminView>\r\n                        }></this.renderNotThumb>\r\n                    </Container>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsItem;","import React, { Component } from 'react';\r\nimport \"./styles/newspage.css\";\r\nimport NewsItem from \"./newsitem\";\r\nimport { Button, Icon, Modal, Grid, Input, TextArea, Header, List, Segment, Rail, Container } from 'semantic-ui-react'\r\nimport $ from 'jquery';\r\n\r\nclass NewsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            selected: 0,\r\n            title: '',\r\n            image: '',\r\n            description: '',\r\n            date: '',\r\n            modalOpen: false\r\n        };\r\n        this.savePost = this.savePost.bind(this);\r\n        this.updateTit = this.updateTit.bind(this);\r\n        this.updateImg = this.updateImg.bind(this);\r\n        this.updateDes = this.updateDes.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n        this.CurrentItem = this.CurrentItem.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n        this.moveSelect = this.moveSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".NewsPage\").offset().top\r\n        });\r\n        this.load();\r\n    }\r\n\r\n    async load() {\r\n        var result = [];\r\n        var temp = await fetch(\"http://localhost:3001/newsitems\")\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (res) {\r\n                return res.newsitem;\r\n            });\r\n\r\n        for (var i = 0; i < temp.length; i++) {\r\n            result.push(\r\n                { title: temp[i].title, description: temp[i].body, additional: temp[i].additional, image: temp[i].image, date: temp[i].date, _id: temp[i]._id }\r\n            );\r\n        }\r\n        this.setState({\r\n            items: result\r\n        });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n    }\r\n\r\n    async post() {\r\n        var td = new Date();\r\n        td = await (td.toString()).substr(4, 11);\r\n        this.setState({ date: td });\r\n        var res = await fetch('http://localhost:3001/newsitems', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                newsitem: {\r\n                    title: this.state.title,\r\n                    body: this.state.description,\r\n                    additional: '-default',\r\n                    image: this.state.image,\r\n                    date: this.state.date\r\n                }\r\n            })\r\n        });\r\n        var data = await res.json();\r\n        return data;\r\n    }\r\n\r\n    savePost() {\r\n        this.post().then(data => {\r\n            var temp = this.state.items;\r\n            temp.push({ title: this.state.title, description: this.state.description, additional: \"-default\", image: this.state.image, date: this.state.date, _id: data._id });\r\n            this.setState({\r\n                items: temp\r\n            });\r\n            this.setState({ selected: this.state.items.length - 1 });\r\n        });\r\n        this.handleClose();\r\n    }\r\n\r\n    updateTit(e) {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n    updateImg(e) {\r\n        this.setState({ image: e.target.value });\r\n    }\r\n    updateDes(e) {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost(x) {\r\n        var temp = this.state.items;\r\n        var delID = temp.splice(x, 1)[0]._id;\r\n        this.setState({ items: temp });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n        fetch('http://localhost:3001/newsitems/' + delID, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n    }\r\n\r\n    selectItem(x) {\r\n        this.setState({ selected: x });\r\n    }\r\n\r\n    CurrentItem(props) {\r\n        if (props.length > 0) {\r\n            return <NewsItem\r\n                i={this.state.selected}\r\n                title={this.state.items[this.state.selected].title}\r\n                body={this.state.items[this.state.selected].description}\r\n                additional=\"-default\"\r\n                image={this.state.items[this.state.selected].image}\r\n                date={this.state.items[this.state.selected].date}\r\n                del={this.deletePost} thumb={false}\r\n                admin={this.props.admin}>\r\n            </NewsItem>;\r\n        } else {\r\n            return <h1>No items</h1>;\r\n        }\r\n    }\r\n\r\n    selectTrigger() {\r\n        if (this.props.thumb) {\r\n            return null;\r\n        } else {\r\n            return <Grid.Row centered><Button onClick={this.handleOpen} color=\"blue\">Details&nbsp;</Button></Grid.Row>;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    moveSelect(x) {\r\n        var temp;\r\n        if (x) {\r\n            if (this.state.selected < (this.state.items.length - 1)) {\r\n                temp = this.state.selected + 1;\r\n                this.setState({\r\n                    selected: temp\r\n                });\r\n            }\r\n        } else {\r\n            if (this.state.selected > 0) {\r\n                temp = this.state.selected - 1;\r\n                this.setState({\r\n                    selected: temp\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewsPage\">\r\n                <Grid celled=\"internally\">\r\n                    <Grid.Row>\r\n                        <h1><Header>News and Updates</Header></h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={12}>\r\n                            <Container>\r\n                                <h2><Header color=\"red\" textAlign=\"left\" style={{ width: \"100%\" }}>Latest Post</Header></h2>\r\n                                <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                    <Grid.Column>\r\n                                        <Button onClick={() => { this.moveSelect(true) }} style={{ height: \"100%\" }}><Icon name=\"arrow left\"></Icon></Button>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={12}>\r\n                                        <this.CurrentItem length={this.state.items.length}></this.CurrentItem>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Button onClick={() => { this.moveSelect(false) }} style={{ height: \"100%\" }}><Icon name=\"arrow right\"></Icon></Button>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n\r\n                            </Container>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={4} style={{ paddingTop: \"0\" }}>\r\n                            <Container>\r\n                                <Header textAlign=\"left\" style={{ paddingTop: \"0.7em\", paddingBottom: \"0em\" }}>Previous Posts</Header>\r\n                                <List celled style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"30em\" }}>\r\n                                    {this.state.items.slice(0).reverse().map(function (item, index) {\r\n                                        return <List.Item style={{ padding: \"0\", paddingTop: \"1em\" }} key={index}><NewsItem key={index} i={index} title={item.title} body={item.description} additional=\"-default\" image={item.image} date={item.date} del={this.deletePost} thumb={true} sel={this.state.selected} select={this.selectItem} admin={false}></NewsItem></List.Item>;\r\n                                    }.bind(this))}\r\n                                </List>\r\n                            </Container>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                <Grid>\r\n                    <this.adminView content={\r\n                        <Modal\r\n                            trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"green\">New Post&nbsp;<Icon name='plus' /></Button></Grid.Row>}\r\n                            open={this.state.modalOpen}\r\n                            onClose={this.handleClose}>\r\n                            <Modal.Header>New Post</Modal.Header>\r\n                            <Modal.Content>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row centered>\r\n                                        <Grid.Column>\r\n                                            Post Title: <Input value={this.state.title} onChange={this.updateTit} placeholder=\"Title...\"></Input>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            ImageURL: <Input value={this.state.image} onChange={this.updateImg} placeholder=\"URL...\"></Input>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered>\r\n                                        <TextArea value={this.state.description} onChange={this.updateDes} placeholder=\"Description...\" style={{ minWidth: \"100%\", maxWidth: \"100%\", minHeight: \"10vw\", maxHeight: \"10vw\" }}></TextArea>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered>\r\n                                        <Button onClick={this.savePost} style={{ textAlign: \"center\" }} color=\"green\">Save&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Modal.Content>\r\n                        </Modal>\r\n                    }></this.adminView>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsPage;","import React, { Component } from 'react';\r\nimport { Grid, Header, Container } from 'semantic-ui-react';\r\nimport \"./styles/resumepage.css\";\r\nimport $ from 'jquery';\r\n\r\nclass ResumePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".ResumePage\").offset().top\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const indent = {\r\n            paddingLeft: \"2em\",\r\n            textAlign: \"left\"\r\n        }\r\n\r\n        const pad = {\r\n            paddingTop: \"2em\"\r\n        }\r\n\r\n        const para = {\r\n            fontSize: \"1.5em\",\r\n            lineHeight: \"1.5em\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"2em\"\r\n        }\r\n\r\n        const project = {\r\n            fontSize: \"1.5em\",\r\n            lineHeight: \"1.5em\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"0em\"\r\n        }\r\n\r\n        const listItem = {\r\n            fontSize: \"1.5em\",\r\n            lineHeight: \"1.5em\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"0em\"\r\n        }\r\n\r\n        const date = {\r\n            fontSize: \"1.5em\",\r\n            float: \"right\",\r\n            textAlign: \"right\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"ResumePage\">\r\n                <Grid celled=\"internally\" relaxed padded=\"vertically\">\r\n                    <Grid.Row stretched>\r\n                        <Grid.Column width={6}>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\">Personal Information</Header>\r\n                                <Header textAlign=\"left\" as=\"h3\">Email</Header>\r\n                                <p style={indent}>jonathanhay0938@gmail.com</p>\r\n                                <p style={indent}>jhay22@uwo.ca (university email)</p>\r\n                                <Header textAlign=\"left\" as=\"h3\">GitHub</Header>\r\n                                <p style={indent}>https://github.com/JonathanHay</p>\r\n                                <Header textAlign=\"left\" as=\"h3\">Website</Header>\r\n                                <p style={indent}>https://jonathanhay.io</p>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Languages</Header>\r\n                                <Grid celled=\"internally\" columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <p>Highly Proficient</p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <p>Moderately Proficient</p>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>C, C++, C#</li>\r\n                                                <li>Python</li>\r\n                                                <li>Java</li>\r\n                                                <li>JavaScript</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Dart</li>\r\n                                                <li>Assembly(ARM)</li>\r\n                                                <li>Typescript</li>\r\n                                                <li>PHP</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Backend/Databases</Header>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>SQL (MySQL)</li>\r\n                                                <li>MongoDB</li>\r\n                                                <li>AWS</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Google Firebase</li>\r\n                                                <li>REST APIs</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Design/Management</Header>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Agile</li>\r\n                                                <li>Scrum</li>\r\n                                                <li>Spiral</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>XP</li>\r\n                                                <li>Waterfall</li>\r\n                                                <li>UML</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Other</Header>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Unity</li>\r\n                                                <li>HTML</li>\r\n                                                <li>CSS</li>\r\n                                                <li>GitHub</li>\r\n                                                <li>All major OS CLIs</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <p style={{ marginBottom: \"0\" }}>Network Config</p>\r\n                                                    <p>(Protocols/OSI)</p>\r\n                                                </li>\r\n                                                <li>SDLC</li>\r\n                                                <li>Microsoft Office</li>\r\n                                                <li>XML</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={10}>\r\n                            <Grid divided=\"vertically\" style={{ paddingLeft: \"2em\" }}>\r\n                                <Grid.Row>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Header as=\"h2\" style={{ width: \"100%\" }} textAlign=\"left\"><strong>PERSONAL STATEMENT</strong></Header>\r\n                                        <p style={para}>\r\n                                            A creative, willing-to-learn, and design-oriented 3rd Year Software Engineering Student,\r\n                                            with Web, Mobile, and Desktop development experience, with an eagerness to expand my knowledge in new technology.\r\n                                    </p>\r\n                                    </Grid>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Header style={{ width: \"100%\" }} textAlign=\"left\" as=\"h2\"><strong>EDUCATION</strong></Header>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Western University</strong>, <i>London ON</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2016-Present</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul style={{ paddingBottom: \"2em\" }}>\r\n                                        <li style={listItem}>Enrolled in Bachelor of Engineering Science (3rd year Software Engineering)</li>\r\n                                        <li style={listItem}>3.0 Cumulative GPA</li>\r\n                                    </ul>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Header style={{ width: \"100%\" }} textAlign=\"left\" as=\"h2\"><strong>PROJECTS</strong></Header>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>TrainCSV</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2016</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Simple command line CSV reader for fast and creatable query with simple <strong>custom query language</strong>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Bustopia</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2018-Present</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Java-based 2D bus management game\r\n                                            </li>\r\n                                        <li style={listItem}>\r\n                                            Currently working on <strong>online leaderboards, cloud save files,</strong> and more interactive\r\n                                                gameplay with a new <strong>physics engine</strong> to allow minigames outside of normal management mode\r\n                                            </li>\r\n                                    </ul>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Personal Website</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2019-Present</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            A website to better showcase my projects and to give updates on what I’ve been up to and what I’m working on\r\n                                            </li>\r\n                                        <li style={listItem}>\r\n                                            Created using <strong>JavaScript, JSX(HTML), CSS, React, Node, Express, MongoDB</strong> and more interactive\r\n                                                and <strong>Google Firebase Auth</strong>\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Header style={{ width: \"100%\" }} textAlign=\"left\" as=\"h2\"><strong>EXTRACURRICULARS AND INTERESTS</strong></Header>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Lead Programmer, Mother Teresa High School FIRST Robotics Competition Team, <i> London, ON</i></strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2015-2016</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Oversaw all coding by First robotics team 5288 and was instrumental in the robot’s functionality.\r\n                                    </li>\r\n                                    </ul>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Electrical Tinkerer</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Familiar with Arduino and Raspberry Pi, circuits, and FPGAs.\r\n                                            </li>\r\n                                    </ul>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResumePage;","import React, { Component } from 'react';\r\nimport \"./styles/projectitem.css\";\r\nimport { Modal, Grid, Button, Icon, Card, Reveal, Header, Image, Container } from \"semantic-ui-react\";\r\n\r\nclass ProjectItem extends Component {\r\n    //Additional will be on standalone page\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (props.thumb === true) {\r\n            this.state = {\r\n                style: {\r\n                    fontSize: \"1em\",\r\n                    height: \"14em\",\r\n                },\r\n                showDetails: false\r\n            };\r\n        } else {\r\n            this.state = {\r\n                style: {\r\n                    width: \"100%\",\r\n                    height: \"30em\"\r\n                },\r\n                showDetails: false\r\n            };\r\n        }\r\n\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.renderThumb = this.renderThumb.bind(this);\r\n        this.renderNotThumb = this.renderNotThumb.bind(this);\r\n        this.showDetails = this.showDetails.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.del(this.props.i);\r\n        this.handleClose();\r\n    }\r\n\r\n    showDetails() {\r\n        this.detailsModal.handleOpen();\r\n    }\r\n\r\n    renderNotThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return null;\r\n        } else {\r\n            return el.content;\r\n        }\r\n    }\r\n    renderThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return el.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectItem\" style={this.state.style}>\r\n                <Grid centered>\r\n                    <Container style={this.state.style}>\r\n                        <this.renderThumb style={{ height: \"inherit\" }} content={\r\n                            <div>\r\n                                <a onClick={this.showDetails}>\r\n                                    <h2><Header>{this.props.title}</Header></h2>\r\n                                    <Image style={{ height: \"10em\", width: \"90%\" }} id=\"image\" src={this.props.image} fluid centered></Image>\r\n                                </a>\r\n                            </div>\r\n                        }></this.renderThumb>\r\n                        <this.renderNotThumb content={\r\n                            <div>\r\n                                <h1><Header>{this.props.title}</Header></h1>\r\n                                <Reveal animated=\"move right\" >\r\n                                    <Reveal.Content visible>\r\n                                        <Image id=\"image\" style={{ height: \"20em\", width: \"50em\" }} src={this.props.image} centered fluid></Image>\r\n                                    </Reveal.Content>\r\n                                    <Reveal.Content hidden>\r\n                                        <p>{this.props.body}</p>\r\n                                    </Reveal.Content>\r\n                                </Reveal>\r\n                            </div>\r\n                        }></this.renderNotThumb>\r\n                        <Card.Meta class=\"meta\">\r\n                            Posted {this.props.date}\r\n                        </Card.Meta>\r\n                        <this.renderNotThumb content={\r\n                            <this.adminView content={\r\n                                <Modal style={{ width: \"20vw\" }}\r\n                                    trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"red\">Delete Post&nbsp;<Icon name='minus' /></Button></Grid.Row>}\r\n                                    open={this.state.modalOpen}\r\n                                    onClose={this.handleClose}>\r\n                                    <Modal.Header>Delete Post</Modal.Header>\r\n                                    <Modal.Content>\r\n                                        <Grid columns=\"equal\">\r\n                                            <Grid.Row centered>\r\n                                                Are you SURE?\r\n                                    </Grid.Row>\r\n                                            <Grid.Row centered>\r\n                                                <Button onClick={this.deletePost} style={{ textAlign: \"center\" }} color=\"orange\">Confirm&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Modal.Content>\r\n                                </Modal>\r\n                            }></this.adminView>\r\n                        }></this.renderNotThumb>\r\n                    </Container>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectItem;","import React, { Component } from 'react';\r\nimport \"./styles/projectspage.css\";\r\nimport ProjectItem from \"./projectitem\";\r\nimport { Button, Icon, Modal, Grid, Input, TextArea, Header, List, Segment, Rail, Container } from 'semantic-ui-react'\r\nimport $ from 'jquery';\r\n\r\nclass ProjectPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            selected: 0,\r\n            title: '',\r\n            image: '',\r\n            description: '',\r\n            date: '',\r\n            modalOpen: false\r\n        };\r\n        this.savePost = this.savePost.bind(this);\r\n        this.updateTit = this.updateTit.bind(this);\r\n        this.updateImg = this.updateImg.bind(this);\r\n        this.updateDes = this.updateDes.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n        this.CurrentItem = this.CurrentItem.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n        this.moveSelect = this.moveSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".ProjectsPage\").offset().top\r\n        });\r\n        this.load();\r\n    }\r\n\r\n    async load() {\r\n        var result = [];\r\n        var temp = await fetch(\"http://localhost:3001/newsitems\")\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (res) {\r\n                return res.newsitem;\r\n            });\r\n\r\n        for (var i = 0; i < temp.length; i++) {\r\n            result.push(\r\n                { title: temp[i].title, description: temp[i].body, additional: temp[i].additional, image: temp[i].image, date: temp[i].date, _id: temp[i]._id }\r\n            );\r\n        }\r\n        this.setState({\r\n            items: result\r\n        });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n    }\r\n\r\n    async post() {\r\n        var td = new Date();\r\n        td = await (td.toString()).substr(4, 11);\r\n        this.setState({ date: td });\r\n        var res = await fetch('http://localhost:3001/newsitems', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                newsitem: {\r\n                    title: this.state.title,\r\n                    body: this.state.description,\r\n                    additional: '-default',\r\n                    image: this.state.image,\r\n                    date: this.state.date\r\n                }\r\n            })\r\n        });\r\n        var data = await res.json();\r\n        return data;\r\n    }\r\n\r\n    savePost() {\r\n        this.post().then(data => {\r\n            var temp = this.state.items;\r\n            temp.push({ title: this.state.title, description: this.state.description, additional: \"-default\", image: this.state.image, date: this.state.date, _id: data._id });\r\n            this.setState({\r\n                items: temp\r\n            });\r\n            this.setState({ selected: this.state.items.length - 1 });\r\n        });\r\n        this.handleClose();\r\n    }\r\n\r\n    updateTit(e) {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n    updateImg(e) {\r\n        this.setState({ image: e.target.value });\r\n    }\r\n    updateDes(e) {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost(x) {\r\n        var temp = this.state.items;\r\n        var delID = temp.splice(x, 1)[0]._id;\r\n        this.setState({ items: temp });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n        fetch('http://localhost:3001/newsitems/' + delID, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n    }\r\n\r\n    selectItem(x) {\r\n        this.setState({ selected: x });\r\n    }\r\n\r\n    CurrentItem(props) {\r\n        if (props.length > 0) {\r\n            return <ProjectItem\r\n                i={this.state.selected}\r\n                title={this.state.items[this.state.selected].title}\r\n                body={this.state.items[this.state.selected].description}\r\n                additional=\"-default\"\r\n                image={this.state.items[this.state.selected].image}\r\n                date={this.state.items[this.state.selected].date}\r\n                del={this.deletePost} thumb={false}\r\n                admin={this.props.admin}>\r\n            </ProjectItem>;\r\n        } else {\r\n            return <h1>No items</h1>;\r\n        }\r\n    }\r\n\r\n    selectTrigger() {\r\n        if (this.props.thumb) {\r\n            return null;\r\n        } else {\r\n            return <Grid.Row centered><Button onClick={this.handleOpen} color=\"blue\">Details&nbsp;</Button></Grid.Row>;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    moveSelect(x) {\r\n        var temp;\r\n        if (x) {\r\n            if (this.state.selected < (this.state.items.length - 1)) {\r\n                temp = this.state.selected + 1;\r\n                this.setState({\r\n                    selected: temp\r\n                });\r\n            }\r\n        } else {\r\n            if (this.state.selected > 0) {\r\n                temp = this.state.selected - 1;\r\n                this.setState({\r\n                    selected: temp\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectsPage\">\r\n                <Grid celled=\"internally\">\r\n                    <Grid.Row>\r\n                        <h1><Header>News and Updates</Header></h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={12}>\r\n                            <Container>\r\n                                <h2><Header color=\"red\" textAlign=\"left\" style={{ width: \"100%\" }}>Latest Post</Header></h2>\r\n                                <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                    <Grid.Column>\r\n                                        <Button onClick={() => { this.moveSelect(true) }} style={{ height: \"100%\" }}><Icon name=\"arrow left\"></Icon></Button>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={12}>\r\n                                        <this.CurrentItem length={this.state.items.length}></this.CurrentItem>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Button onClick={() => { this.moveSelect(false) }} style={{ height: \"100%\" }}><Icon name=\"arrow right\"></Icon></Button>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </Container>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={4} style={{ paddingTop: \"0\" }}>\r\n                            <Container>\r\n                                <Header textAlign=\"left\" style={{ paddingTop: \"0.7em\", paddingBottom: \"0em\" }}>Previous Posts</Header>\r\n                                <List celled style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"30em\" }}>\r\n                                    {this.state.items.slice(0).reverse().map(function (item, index) {\r\n                                        return <List.Item style={{ padding: \"0\", paddingTop: \"1em\" }} key={index}><ProjectItem key={index} i={index} title={item.title} body={item.description} additional=\"-default\" image={item.image} date={item.date} del={this.deletePost} thumb={true} sel={this.state.selected} select={this.selectItem} admin={false}></ProjectItem></List.Item>;\r\n                                    }.bind(this))}\r\n                                </List>\r\n                            </Container>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                <Grid>\r\n                    <this.adminView content={\r\n                        <Modal\r\n                            trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"green\">New Post&nbsp;<Icon name='plus' /></Button></Grid.Row>}\r\n                            open={this.state.modalOpen}\r\n                            onClose={this.handleClose}>\r\n                            <Modal.Header>New Post</Modal.Header>\r\n                            <Modal.Content>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row centered>\r\n                                        <Grid.Column>\r\n                                            Post Title: <Input value={this.state.title} onChange={this.updateTit} placeholder=\"Title...\"></Input>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            ImageURL: <Input value={this.state.image} onChange={this.updateImg} placeholder=\"URL...\"></Input>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered>\r\n                                        <TextArea value={this.state.description} onChange={this.updateDes} placeholder=\"Description...\" style={{ minWidth: \"100%\", maxWidth: \"100%\", minHeight: \"10vw\", maxHeight: \"10vw\" }}></TextArea>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered>\r\n                                        <Button onClick={this.savePost} style={{ textAlign: \"center\" }} color=\"green\">Save&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Modal.Content>\r\n                        </Modal>\r\n                    }></this.adminView>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport default ProjectPage;","import React, { Component } from 'react';\r\nimport \"./styles/footer.css\";\r\nimport { Grid, Segment, Container, Header, List, Divider, Image } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".Footer\").offset().top\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const back = {\r\n            backgroundColor: \"#1b1c1d\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"Footer\">\r\n                <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\r\n                    <Container textAlign='center'>\r\n                        <Grid divided inverted stackable>\r\n                            <Grid.Column width={3}>\r\n                                <Header inverted as='h4' content='Useful Resources' />\r\n                                <List link inverted>\r\n                                    <List.Item as='a' href=\"https://www.w3schools.com/\">W3Schools</List.Item>\r\n                                    <List.Item as='a' href=\"https://stackoverflow.com/\">StackOverflow</List.Item>\r\n                                    <List.Item as='a' href=\"https://codepen.io/\">CodePen</List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={3}>\r\n                                <Header inverted as='h4' content='Cool Stuff' />\r\n                                <List link inverted>\r\n                                    <List.Item as='a' href=\"https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA\">Computerphile</List.Item>\r\n                                    <List.Item as='a' href=\"https://www.youtube.com/channel/UCIB5XXHNAWWzTOw6guIMYCg\">Harry's Garage</List.Item>\r\n                                    <List.Item as='a' href=\"https://www.twitch.tv/\">Twitch</List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={3}>\r\n                                <Header inverted as='h2' content='Contact' />\r\n                                <List link inverted>\r\n                                    <List.Item as='a' href=\"https://github.com/JonathanHay\">Github</List.Item>\r\n                                    <List.Item as='a' href=\"https://www.linkedin.com/in/jonathan-hay-82885a180/\">LinkedIn</List.Item>\r\n                                    <List.Item as='a' href=\"https://mail.google.com/mail/?view=cm&fs=1&to=jonathanhay0938@gmail.com&su=Referred by Website&body=Hi Jonathan, I need your help!\">Gmail</List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={7}>\r\n                                <Header inverted as='h4' content='Thanks for Reading!' />\r\n                                <p>\r\n                                    Feel free to contact me if you have an inquiries!\r\n                                </p>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n\r\n                        <Divider inverted section />\r\n                        <Image centered size='tiny' src='/icon.png' />\r\n                        <List horizontal inverted divided link size='small'>\r\n                            <List.Item as='a' href='#'>\r\n                                Site Map\r\n                            </List.Item>\r\n                            <List.Item as='a' onClick={function () { window.location.reload(); }}>\r\n                                Reload\r\n                            </List.Item>\r\n                            <List.Item >\r\n                                &copy; Jonathan Hay 2019\r\n                             </List.Item>\r\n                        </List>\r\n                    </Container>\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import firebase from 'firebase'\r\nconst config = {\r\n    apiKey: \"AIzaSyB9ieLlX-NqBljeb1lc8euARVnGqGtwnlc\",\r\n    authDomain: \"hayweb-aba80.firebaseapp.com\",\r\n    databaseURL: \"https://hayweb-aba80.firebaseio.com\",\r\n    projectId: \"hayweb-aba80\",\r\n    storageBucket: \"hayweb-aba80.appspot.com\",\r\n    messagingSenderId: \"1026237608417\",\r\n    appId: \"1:1026237608417:web:974274154b45b993\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport { Menu, Button, Container, Header, Modal, Grid, Form, Segment, Message } from 'semantic-ui-react'\r\nimport AboutPage from \"./aboutpage\";\r\nimport NewsPage from \"./newspage\";\r\nimport ResumePage from \"./resumepage\";\r\nimport ProjectsPage from \"./projectspage\";\r\nimport Footer from \"./footer\";\r\nimport $ from 'jquery';\r\nimport firebase, { auth, provider } from './firebase.js';\r\nimport \"./styles/nav.css\";\r\n\r\nclass Nav extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sel: 0,\r\n            modalOpen: false,\r\n            user: null,\r\n            admin: false,\r\n            email: \"\",\r\n            password: \"\",\r\n            errorMessage: null\r\n        };\r\n        this.handleButton = this.handleButton.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.displayUser = this.displayUser.bind(this);\r\n        this.updateE = this.updateE.bind(this);\r\n        this.updateP = this.updateP.bind(this);\r\n        this.displayError = this.displayError.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged((u) => {\r\n            if (u) {\r\n                this.setState({\r\n                    user: u,\r\n                    admin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleButton(x) {\r\n        this.setState({\r\n            sel: x\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    login() {\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then((result) => {\r\n            const u = result.user;\r\n            this.setState({\r\n                user: u,\r\n                admin: true\r\n            });\r\n            this.closeModal();\r\n        }).catch(e => {\r\n            this.setState({\r\n                errorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    logout() {\r\n        auth.signOut().then(() => {\r\n            this.setState({\r\n                user: null,\r\n                admin: false\r\n            });\r\n        });\r\n    }\r\n\r\n    renderLogin() {\r\n        if (this.state.user === null) {\r\n            return <Button onClick={this.openModal} inverted>Login</Button>\r\n        } else {\r\n            return <Button onClick={this.logout} inverted>Logout</Button>;\r\n        }\r\n    }\r\n\r\n    displayUser() {\r\n        if (this.state.user === null) {\r\n            return null;\r\n        } else {\r\n            return <Menu.Item >Logged in as {this.state.user.email}</Menu.Item>\r\n        }\r\n    }\r\n\r\n    displayError() {\r\n        if (this.state.errorMessage === null) {\r\n            return null;\r\n        } else {\r\n            return <Message negative><Message.Header>Login Failed.</Message.Header><p>{this.state.errorMessage}</p></Message>;\r\n        }\r\n\r\n    }\r\n\r\n    updateE(e) {\r\n        this.setState({ email: e.target.value });\r\n    }\r\n    updateP(e) {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        var para = <AboutPage but={this.handleButton}></AboutPage>;\r\n        if (this.state.sel === 0) {\r\n            para = <AboutPage but={this.handleButton}></AboutPage>;\r\n        } else if (this.state.sel === 1) {\r\n            para = <NewsPage admin={this.state.admin}></NewsPage>;\r\n        } else if (this.state.sel === 2) {\r\n            para = <ProjectsPage></ProjectsPage>;\r\n        } else if (this.state.sel === 3) {\r\n            para = <ResumePage></ResumePage>;\r\n        } else if (this.state.sel === 4) {\r\n            $('html, body').animate({\r\n                scrollTop: $(\".Footer\").offset().top\r\n            });\r\n        }\r\n\r\n        var modal =\r\n            <Modal\r\n                basic\r\n                trigger={this.renderLogin()}\r\n                open={this.state.modalOpen}\r\n                onClose={this.closeModal}\r\n                closeIcon\r\n                style={{ width: \"38em\" }}\r\n            >\r\n                <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Administrator Login\r\n                        </Header>\r\n                        <Form size='large'>\r\n                            <Segment stacked>\r\n                                <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={this.state.email} onChange={this.updateE} />\r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Password'\r\n                                    type='password'\r\n                                    value={this.state.password}\r\n                                    onChange={this.updateP}\r\n                                />\r\n                                {this.displayError()}\r\n                                <Button onClick={this.login} color='teal' fluid size='large'>\r\n                                    Login\r\n                                </Button>\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Modal>\r\n            ;\r\n\r\n        return (\r\n\r\n            <div className=\"Nav\">\r\n                <div id=\"masthead\">\r\n                    <Container style={{ display: \"table\", fontSize: \"3vw\" }}>\r\n                        <Header style={{ verticalAlign: \"middle\", display: \"table-cell\", height: \"20vw\" }} inverted size=\"huge\">Jonathan Hay</Header>\r\n                    </Container>\r\n                </div>\r\n                <div id=\"main\">\r\n                    <Container>\r\n                        <Menu inverted pointing secondary >\r\n                            <Menu.Item\r\n                                name='home'\r\n                                active={this.state.sel === 0}\r\n                                onClick={() => this.handleButton(0)}\r\n                            >\r\n                                Home\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='news'\r\n                                active={this.state.sel === 1}\r\n                                onClick={() => this.handleButton(1)}\r\n                            >\r\n                                News\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item\r\n                                name='projects'\r\n                                active={this.state.sel === 2}\r\n                                onClick={() => this.handleButton(2)}\r\n                            >\r\n                                Projects\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='resume'\r\n                                active={this.state.sel === 3}\r\n                                onClick={() => this.handleButton(3)}\r\n                            >\r\n                                Resume\r\n                            </Menu.Item>\r\n                            <Menu inverted floated=\"right\" >\r\n                                {this.displayUser()}\r\n                                {modal}\r\n                            </Menu>\r\n                        </Menu>\r\n                    </Container>\r\n                </div>\r\n                <Container id=\"content\" style={{ minHeight: \"100vh\" }}>\r\n                    {para}\r\n                </Container>\r\n                <Footer></Footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport \"./styles/pageheader.css\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass PageHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        function enter() {\r\n            document.getElementById(\"overlay\").style.opacity = \"0\";\r\n            document.getElementById(\"overlay\").style.visibility = \"hidden\";\r\n            document.getElementById(\"words\").style.visibility = \"hidden\";\r\n        }\r\n\r\n        return (\r\n            <div id=\"overlay\" className=\"PageHeader\">\r\n                <div id=\"words\">\r\n                    <span>Designer</span>\r\n                    <span>Collaborator</span>\r\n                    <span>Engineer</span>\r\n                    <span>Student</span>\r\n                </div>\r\n                <Button onClick={enter} inverted size=\"massive\" style={{ marginTop: \"30vh\" }}>Enter</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageHeader;","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from \"./components/nav\";\nimport PageHeader from \"./components/pageheader\";\nimport $ from 'jquery';\nimport { Button } from 'semantic-ui-react';\n\nclass App extends Component {\n\n  componentDidMount() {\n    $('html, body').animate({\n      scrollTop: $(\".AboutPage\").offset().top\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PageHeader></PageHeader>\n        <Nav></Nav>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}