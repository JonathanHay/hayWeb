{"version":3,"sources":["components/aboutpage.js","components/newsitemdetails.js","components/newsitem.js","components/newspage.js","components/resumepage.js","components/projectitem.js","components/projectspage.js","components/footer.js","components/firebase.js","components/nav.js","components/pageheader.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","$","animate","scrollTop","offset","top","_this2","navItem","marginLeft","marginRight","react_default","a","createElement","className","Grid","Row","Header","size","centered","width","List","horizontal","Item","style","onClick","but","Segment","inverted","color","Icon","name","Component","NewsItemDetails","modalOpen","handleOpen","bind","assertThisInitialized","handleClose","setState","thumb","Button","Modal","trigger","selectTrigger","open","onClose","backgroundColor","height","display","title","textAlign","float","date","Content","columns","divided","Column","Image","fluid","objectFit","alt","src","image","body","minHeight","additional","NewsItem","fontSize","showDetails","maxWidth","deletePost","renderThumb","renderNotThumb","adminView","del","i","detailsModal","el","content","x","admin","Container","id","components_newsitemdetails","ref","Reveal","animated","visible","hidden","Card","Meta","class","NewsPage","items","selected","description","savePost","updateTit","updateImg","updateDes","selectItem","CurrentItem","moveSelect","load","result","fetch","backendLink","BackendIP","then","response","json","res","newsitem","temp","length","push","_id","td","Date","toString","substr","method","headers","Content-Type","JSON","stringify","data","post","e","target","value","delID","splice","components_newsitem","_this3","celled","verticalAlign","paddingTop","paddingBottom","overflowY","overflowX","slice","reverse","map","item","index","padding","key","sel","select","Input","onChange","placeholder","TextArea","minWidth","maxHeight","ResumePage","indent","paddingLeft","pad","project","lineHeight","listItem","relaxed","padded","stretched","as","marginBottom","ProjectItem","chooseImage","image1","image2","image3","ProjectPage","repo","updateImg1","updateImg2","updateImg3","updateDate","updateRepo","console","log","components_projectitem","Footer","vertical","margin","stackable","link","href","Divider","section","window","location","reload","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","Nav","user","email","password","errorMessage","handleButton","openModal","closeModal","renderLogin","login","logout","displayUser","updateE","updateP","displayError","onAuthStateChanged","u","signInWithEmailAndPassword","catch","message","_this4","signOut","Menu","Message","negative","_this5","para","components_aboutpage","components_newspage","components_projectspage","components_resumepage","modal","basic","closeIcon","Form","stacked","icon","iconPosition","type","pointing","secondary","active","floated","components_footer","PageHeader","document","getElementById","opacity","visibility","marginTop","App","components_pageheader","components_nav","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2547acad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./styles/aboutpage.css\";\r\nimport { Grid, Segment, Icon, Header, Divider, List } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass AboutPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".AboutPage\").offset().top\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const navItem = {\r\n            marginLeft: \"0em\",\r\n            marginRight: \"1em\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"AboutPage\">\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <h1>\r\n                            <Header>Hi, My name is Jonathan Hay...</Header>\r\n                        </h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <h2>\r\n                            <Header size=\"large\">About Me</Header>\r\n                        </h2>\r\n                        <p>\r\n                            I am a third year Software Engineering student at Western University. I am a <strong>hard working</strong>, <strong>willing-to-learn</strong> student\r\n                            with an <strong>intense drive to succeed</strong>. I am an avid gamer, a car enthusiast, a movie lover, and have a pet parrotlet named Harry.\r\n                        </p>\r\n                    </Grid.Row>\r\n                    <Grid.Row centered width={2}>\r\n                        <List horizontal>\r\n                            <List.Item style={navItem}>\r\n                                <a onClick={() => { this.props.but(2) }}>\r\n                                    <Segment inverted color=\"teal\" className=\"drop\">\r\n                                        <h3>Projects</h3>\r\n                                        <Icon inverted size=\"massive\" name=\"newspaper outline\"></Icon>\r\n                                    </Segment>\r\n                                </a>\r\n                            </List.Item>\r\n                            <List.Item style={navItem}>\r\n                                <a onClick={() => { this.props.but(1) }}>\r\n                                    <Segment inverted color=\"teal\" className=\"drop\">\r\n                                        <h3>News</h3>\r\n                                        <Icon inverted size=\"massive\" name=\"code\"></Icon>\r\n                                    </Segment>\r\n                                </a>\r\n                            </List.Item>\r\n                            <List.Item style={navItem}>\r\n                                <a onClick={() => { this.props.but(4) }}>\r\n                                    <Segment inverted color=\"teal\" className=\"drop\">\r\n                                        <h3>Contact</h3>\r\n                                        <Icon inverted size=\"massive\" name=\"chat\"></Icon>\r\n                                    </Segment>\r\n                                </a>\r\n                            </List.Item>\r\n                            <List.Item style={navItem}>\r\n                                <a onClick={() => { this.props.but(3) }}>\r\n                                    <Segment inverted color=\"teal\" className=\"drop\">\r\n                                        <h3>Resume</h3>\r\n                                        <Icon inverted size=\"massive\" name=\"clipboard outline\"></Icon>\r\n                                    </Segment>\r\n                                </a>\r\n                            </List.Item>\r\n                        </List>\r\n                    </Grid.Row>\r\n                </Grid >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React, { Component } from 'react';\r\nimport \"./styles/newsitemdetails.css\";\r\nimport { Modal, Grid, Button, Icon, Image } from \"semantic-ui-react\";\r\n\r\nclass NewsItemDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false\r\n        };\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    selectTrigger() {\r\n        if (this.props.thumb) {\r\n            return null;\r\n        } else {\r\n            return <Grid.Row centered><Button onClick={this.handleOpen} color=\"blue\">Details&nbsp;</Button></Grid.Row>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewsItemDetails\">\r\n                <Modal style={{ width: \"66vw\" }}\r\n                    trigger={this.selectTrigger()}\r\n                    open={this.state.modalOpen}\r\n                    onClose={this.handleClose}>\r\n                    <Modal.Header style={{ backgroundColor: \"#1b1c1d\", height: \"8vw\" }}>\r\n                        <h1 style={{ display: \"inline\", color: \"whitesmoke\" }} >{this.props.title}</h1>\r\n                        <Button onClick={this.handleClose} style={{ textAlign: \"center\", float: \"right\" }} color=\"red\"><Icon style={{ display: \"inline-block\", textAlign: \"right\" }} name='close' /></Button>\r\n                        <p style={{ color: \"white\" }} >posted {this.props.date}</p>\r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                        <Grid columns=\"equal\">\r\n                            <Grid.Row centered>\r\n                                <Grid divided='vertically' columns=\"equal\" style={{ width: \"66vw\" }}>\r\n                                    <Grid.Row divided style={{ height: \"25vw\", width: \"100%\", backgroundColor: \"whitesmoke\" }} centered>\r\n                                        <Grid.Column>\r\n                                            <Image fluid style={{ height: \"22vw\", width: \"100%\", objectFit: \"contain\" }} alt=\"\" src={this.props.image}></Image>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <p>{this.props.body}</p>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered style={{ minHeight: \"10vw\" }}>\r\n                                        <p>{this.props.additional}</p>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsItemDetails;","import React, { Component } from 'react';\r\nimport \"./styles/newsitem.css\";\r\nimport NewsItemDetails from \"./newsitemdetails\";\r\nimport { Modal, Grid, Button, Icon, Card, Reveal, Header, Image, Container } from \"semantic-ui-react\";\r\n\r\nclass NewsItem extends Component {\r\n    //Additional will be on standalone page\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (props.thumb === true) {\r\n            this.state = {\r\n                style: {\r\n                    fontSize: \"1em\",\r\n                    minHeight: \"14em\",\r\n                },\r\n                showDetails: false\r\n            };\r\n        } else {\r\n            this.state = {\r\n                style: {\r\n                    maxWidth: \"100%\",\r\n                    height: \"30em\"\r\n                },\r\n                showDetails: false\r\n            };\r\n        }\r\n\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.renderThumb = this.renderThumb.bind(this);\r\n        this.renderNotThumb = this.renderNotThumb.bind(this);\r\n        this.showDetails = this.showDetails.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.del(this.props.i);\r\n        this.handleClose();\r\n    }\r\n\r\n    showDetails() {\r\n        this.detailsModal.handleOpen();\r\n    }\r\n\r\n    renderNotThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return null;\r\n        } else {\r\n            return el.content;\r\n        }\r\n    }\r\n    renderThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return el.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewsItem\" style={this.state.style}>\r\n                <Grid centered>\r\n                    <Container style={this.state.style}>\r\n                        <this.renderThumb style={{ height: \"inherit\" }} content={\r\n                            <div>\r\n                                <a onClick={this.showDetails}>\r\n                                    <h2><Header>{this.props.title}</Header></h2>\r\n                                    <Image style={{ height: \"10em\", maxWidth: \"90%\" }} id=\"image\" src={this.props.image} fluid centered></Image>\r\n                                </a>\r\n                                <NewsItemDetails title={this.props.title} body={this.props.body} additional={this.props.additional} image={this.props.image} date={this.props.date} thumb={true} ref={(ref) => { this.detailsModal = ref; }}></NewsItemDetails>\r\n                            </div>\r\n                        }></this.renderThumb>\r\n                        <this.renderNotThumb content={\r\n                            <div>\r\n                                <h1><Header>{this.props.title}</Header></h1>\r\n                                <Reveal animated=\"move right\" >\r\n                                    <Reveal.Content visible>\r\n                                        <Image id=\"image\" style={{ height: \"20em\", width: \"50em\" }} src={this.props.image} centered fluid></Image>\r\n                                    </Reveal.Content>\r\n                                    <Reveal.Content hidden>\r\n                                        <p>{this.props.body}</p>\r\n                                        <NewsItemDetails title={this.props.title} body={this.props.body} additional={this.props.additional} image={this.props.image} date={this.props.date} thumb={false}></NewsItemDetails>\r\n                                    </Reveal.Content>\r\n                                </Reveal>\r\n                            </div>\r\n                        }></this.renderNotThumb>\r\n                        <Card.Meta class=\"meta\">\r\n                            Posted {this.props.date}\r\n                        </Card.Meta>\r\n                        <this.renderNotThumb content={\r\n                            <this.adminView content={\r\n                                <Modal style={{ width: \"20vw\" }}\r\n                                    trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"red\">Delete Post&nbsp;<Icon name='minus' /></Button></Grid.Row>}\r\n                                    open={this.state.modalOpen}\r\n                                    onClose={this.handleClose}>\r\n                                    <Modal.Header>Delete Post</Modal.Header>\r\n                                    <Modal.Content>\r\n                                        <Grid columns=\"equal\">\r\n                                            <Grid.Row centered>\r\n                                                Are you SURE?\r\n                                    </Grid.Row>\r\n                                            <Grid.Row centered>\r\n                                                <Button onClick={this.deletePost} style={{ textAlign: \"center\" }} color=\"orange\">Confirm&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Modal.Content>\r\n                                </Modal>\r\n                            }></this.adminView>\r\n                        }></this.renderNotThumb>\r\n                    </Container>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsItem;","import React, { Component } from 'react';\r\nimport \"./styles/newspage.css\";\r\nimport NewsItem from \"./newsitem\";\r\nimport backendLink from \"../backendLink\";\r\nimport { Button, Icon, Modal, Grid, Input, TextArea, Header, List, Segment, Rail, Container } from 'semantic-ui-react'\r\nimport $ from 'jquery';\r\n\r\nclass NewsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            selected: 0,\r\n            title: '',\r\n            image: '',\r\n            description: '',\r\n            date: '',\r\n            modalOpen: false\r\n        };\r\n        this.savePost = this.savePost.bind(this);\r\n        this.updateTit = this.updateTit.bind(this);\r\n        this.updateImg = this.updateImg.bind(this);\r\n        this.updateDes = this.updateDes.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n        this.CurrentItem = this.CurrentItem.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n        this.moveSelect = this.moveSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".NewsPage\").offset().top\r\n        });\r\n        this.load();\r\n    }\r\n\r\n    async load() {\r\n        var result = [];\r\n        var temp = await fetch(backendLink.BackendIP + \"/newsitems\")\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (res) {\r\n                return res.newsitem;\r\n            });\r\n\r\n        for (var i = 0; i < temp.length; i++) {\r\n            result.push(\r\n                { title: temp[i].title, description: temp[i].body, additional: temp[i].additional, image: temp[i].image, date: temp[i].date, _id: temp[i]._id }\r\n            );\r\n        }\r\n        this.setState({\r\n            items: result\r\n        });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n    }\r\n\r\n    async post() {\r\n        var td = new Date();\r\n        td = await (td.toString()).substr(4, 11);\r\n        this.setState({ date: td });\r\n        var res = await fetch(backendLink.BackendIP + \"/newsitems\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                newsitem: {\r\n                    title: this.state.title,\r\n                    body: this.state.description,\r\n                    additional: '-default',\r\n                    image: this.state.image,\r\n                    date: this.state.date\r\n                }\r\n            })\r\n        });\r\n        var data = await res.json();\r\n        return data;\r\n    }\r\n\r\n    savePost() {\r\n        this.post().then(data => {\r\n            var temp = this.state.items;\r\n            temp.push({ title: this.state.title, description: this.state.description, additional: \"-default\", image: this.state.image, date: this.state.date, _id: data._id });\r\n            this.setState({\r\n                items: temp\r\n            });\r\n            this.setState({ selected: this.state.items.length - 1 });\r\n        });\r\n        this.handleClose();\r\n    }\r\n\r\n    updateTit(e) {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n    updateImg(e) {\r\n        this.setState({ image: e.target.value });\r\n    }\r\n    updateDes(e) {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost(x) {\r\n        var temp = this.state.items;\r\n        var delID = temp.splice(x, 1)[0]._id;\r\n        this.setState({ items: temp });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n        fetch('http://localhost:3001/newsitems/' + delID, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n    }\r\n\r\n    selectItem(x) {\r\n        this.setState({ selected: x });\r\n    }\r\n\r\n    CurrentItem(props) {\r\n        if (this.state.selected < 0) {\r\n            this.setState({\r\n                selected: 0\r\n            });\r\n        }\r\n        if (props.length > 0) {\r\n            return <NewsItem\r\n                i={this.state.selected}\r\n                title={this.state.items[this.state.selected].title}\r\n                body={this.state.items[this.state.selected].description}\r\n                additional=\"-default\"\r\n                image={this.state.items[this.state.selected].image}\r\n                date={this.state.items[this.state.selected].date}\r\n                del={this.deletePost} thumb={false}\r\n                admin={this.props.admin}>\r\n            </NewsItem>;\r\n        } else {\r\n            return <h1>No items</h1>;\r\n        }\r\n    }\r\n\r\n    selectTrigger() {\r\n        if (this.props.thumb) {\r\n            return null;\r\n        } else {\r\n            return <Grid.Row centered><Button onClick={this.handleOpen} color=\"blue\">Details&nbsp;</Button></Grid.Row>;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    moveSelect(x) {\r\n        var temp;\r\n        if (x) {\r\n            if (this.state.selected < (this.state.items.length - 1)) {\r\n                temp = this.state.selected + 1;\r\n                this.setState({\r\n                    selected: temp\r\n                });\r\n            }\r\n        } else {\r\n            if (this.state.selected > 0) {\r\n                temp = this.state.selected - 1;\r\n                this.setState({\r\n                    selected: temp\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewsPage\">\r\n                <Grid celled=\"internally\" centered>\r\n                    <Grid.Row>\r\n                        <h1><Header>News and Updates</Header></h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={10}>\r\n                            <Container>\r\n                                <h2><Header color=\"red\" textAlign=\"left\" style={{ width: \"100%\" }}>Latest Post</Header></h2>\r\n                                <Grid columns=\"equal\" verticalAlign='middle' style={{ width: \"100%\" }}>\r\n                                    <Grid.Row centered>\r\n                                        <this.CurrentItem length={this.state.items.length}></this.CurrentItem>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column style={{ textAlign: \"center\" }}>\r\n                                            <a onClick={() => { this.moveSelect(true) }} style={{ height: \"100%\" }}><Icon name=\"arrow left\" size=\"massive\"></Icon></a>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column style={{ textAlign: \"center\" }} >\r\n                                            <a onClick={() => { this.moveSelect(false) }} style={{ minHeight: \"100%\" }}><Icon name=\"arrow right\" size=\"massive\" style={{ height: \"100%\" }}></Icon></a>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Container>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={6} style={{ paddingTop: \"0\" }}>\r\n                            <Container>\r\n                                <Header textAlign=\"left\" style={{ paddingTop: \"0.7em\", paddingBottom: \"0em\" }}>Previous Posts</Header>\r\n                                <List celled style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"30em\" }}>\r\n                                    {this.state.items.slice(0).reverse().map(function (item, index) {\r\n                                        return <List.Item style={{ padding: \"0\", paddingTop: \"1em\" }} key={index}><NewsItem key={index} i={index} title={item.title} body={item.description} additional=\"-default\" image={item.image} date={item.date} del={this.deletePost} thumb={true} sel={this.state.selected} select={this.selectItem} admin={false}></NewsItem></List.Item>;\r\n                                    }.bind(this))}\r\n                                </List>\r\n                            </Container>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n                <Grid>\r\n                    <this.adminView content={\r\n                        <Modal\r\n                            trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"green\">New Post&nbsp;<Icon name='plus' /></Button></Grid.Row>}\r\n                            open={this.state.modalOpen}\r\n                            onClose={this.handleClose}>\r\n                            <Modal.Header>New Post</Modal.Header>\r\n                            <Modal.Content>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row centered>\r\n                                        <Grid.Column>\r\n                                            Post Title: <Input value={this.state.title} onChange={this.updateTit} placeholder=\"Title...\"></Input>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            ImageURL: <Input value={this.state.image} onChange={this.updateImg} placeholder=\"URL...\"></Input>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered>\r\n                                        <TextArea value={this.state.description} onChange={this.updateDes} placeholder=\"Description...\" style={{ minWidth: \"100%\", maxWidth: \"100%\", minHeight: \"10vw\", maxHeight: \"10vw\" }}></TextArea>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row centered>\r\n                                        <Button onClick={this.savePost} style={{ textAlign: \"center\" }} color=\"green\">Save&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Modal.Content>\r\n                        </Modal>\r\n                    }></this.adminView>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsPage;","import React, { Component } from 'react';\r\nimport { Grid, Header, Container } from 'semantic-ui-react';\r\nimport \"./styles/resumepage.css\";\r\nimport $ from 'jquery';\r\n\r\nclass ResumePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".ResumePage\").offset().top\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const indent = {\r\n            paddingLeft: \"2em\",\r\n            textAlign: \"left\"\r\n        }\r\n\r\n        const pad = {\r\n            paddingTop: \"2em\"\r\n        }\r\n\r\n        const para = {\r\n            fontSize: \"1.5em\",\r\n            lineHeight: \"1.5em\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"2em\"\r\n        }\r\n\r\n        const project = {\r\n            fontSize: \"1.5em\",\r\n            lineHeight: \"1.5em\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"0em\"\r\n        }\r\n\r\n        const listItem = {\r\n            fontSize: \"1.5em\",\r\n            lineHeight: \"1.5em\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"0em\"\r\n        }\r\n\r\n        const date = {\r\n            fontSize: \"1.5em\",\r\n            float: \"right\",\r\n            textAlign: \"right\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"ResumePage\">\r\n                <Grid celled=\"internally\" relaxed padded=\"vertically\">\r\n                    <Grid.Row stretched>\r\n                        <Grid.Column width={6}>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\">Personal Information</Header>\r\n                                <Header textAlign=\"left\" as=\"h3\">Email</Header>\r\n                                <p style={indent}>jonathanhay0938@gmail.com</p>\r\n                                <p style={indent}>jhay22@uwo.ca (university email)</p>\r\n                                <Header textAlign=\"left\" as=\"h3\">GitHub</Header>\r\n                                <p style={indent}>https://github.com/JonathanHay</p>\r\n                                <Header textAlign=\"left\" as=\"h3\">Website</Header>\r\n                                <p style={indent}>https://jonathanhay.io</p>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Languages</Header>\r\n                                <Grid celled=\"internally\" columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <p>Highly Proficient</p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <p>Moderately Proficient</p>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>C, C++, C#</li>\r\n                                                <li>Python</li>\r\n                                                <li>Java</li>\r\n                                                <li>JavaScript</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Dart</li>\r\n                                                <li>Assembly(ARM)</li>\r\n                                                <li>Typescript</li>\r\n                                                <li>PHP</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Backend/Databases</Header>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>SQL (MySQL)</li>\r\n                                                <li>MongoDB</li>\r\n                                                <li>AWS</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Google Firebase</li>\r\n                                                <li>REST APIs</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Design/Management</Header>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Agile</li>\r\n                                                <li>Scrum</li>\r\n                                                <li>Spiral</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>XP</li>\r\n                                                <li>Waterfall</li>\r\n                                                <li>UML</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Header as=\"h2\" style={pad}>Other</Header>\r\n                                <Grid columns=\"equal\">\r\n                                    <Grid.Row>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>Unity</li>\r\n                                                <li>HTML</li>\r\n                                                <li>CSS</li>\r\n                                                <li>GitHub</li>\r\n                                                <li>All major OS CLIs</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <p style={{ marginBottom: \"0\" }}>Network Config</p>\r\n                                                    <p>(Protocols/OSI)</p>\r\n                                                </li>\r\n                                                <li>SDLC</li>\r\n                                                <li>Microsoft Office</li>\r\n                                                <li>XML</li>\r\n                                            </ul>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Grid.Row>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={10}>\r\n                            <Grid divided=\"vertically\" style={{ paddingLeft: \"2em\" }}>\r\n                                <Grid.Row>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Header as=\"h2\" style={{ width: \"100%\" }} textAlign=\"left\"><strong>PERSONAL STATEMENT</strong></Header>\r\n                                        <p style={para}>\r\n                                            A creative, willing-to-learn, and design-oriented 3rd Year Software Engineering Student,\r\n                                            with Web, Mobile, and Desktop development experience, with an eagerness to expand my knowledge in new technology.\r\n                                    </p>\r\n                                    </Grid>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Header style={{ width: \"100%\" }} textAlign=\"left\" as=\"h2\"><strong>EDUCATION</strong></Header>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Western University</strong>, <i>London ON</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2016-Present</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul style={{ paddingBottom: \"2em\" }}>\r\n                                        <li style={listItem}>Enrolled in Bachelor of Engineering Science (3rd year Software Engineering)</li>\r\n                                        <li style={listItem}>3.0 Cumulative GPA</li>\r\n                                    </ul>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Header style={{ width: \"100%\" }} textAlign=\"left\" as=\"h2\"><strong>PROJECTS</strong></Header>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>TrainCSV</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2016</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Simple command line CSV reader for fast and creatable query with simple <strong>custom query language</strong>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Bustopia</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2018-Present</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Java-based 2D bus management game\r\n                                            </li>\r\n                                        <li style={listItem}>\r\n                                            Currently working on <strong>online leaderboards, cloud save files,</strong> and more interactive\r\n                                                gameplay with a new <strong>physics engine</strong> to allow minigames outside of normal management mode\r\n                                            </li>\r\n                                    </ul>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Personal Website</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2019-Present</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            A website to better showcase my projects and to give updates on what I’ve been up to and what I’m working on\r\n                                            </li>\r\n                                        <li style={listItem}>\r\n                                            Created using <strong>JavaScript, JSX(HTML), CSS, React, Node, Express, MongoDB</strong> and more interactive\r\n                                                and <strong>Google Firebase Auth</strong>\r\n                                        </li>\r\n                                    </ul>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Header style={{ width: \"100%\" }} textAlign=\"left\" as=\"h2\"><strong>EXTRACURRICULARS AND INTERESTS</strong></Header>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Lead Programmer, Mother Teresa High School FIRST Robotics Competition Team, <i> London, ON</i></strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                            <p style={date}>\r\n                                                <i>2015-2016</i>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Oversaw all coding by First robotics team 5288 and was instrumental in the robot’s functionality.\r\n                                    </li>\r\n                                    </ul>\r\n                                    <Grid columns=\"equal\" style={{ width: \"100%\" }}>\r\n                                        <Grid.Column>\r\n                                            <p style={project}>\r\n                                                <strong>Electrical Tinkerer</strong>\r\n                                            </p>\r\n                                        </Grid.Column>\r\n                                        <Grid.Column textAlign=\"right\">\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                    <ul>\r\n                                        <li style={listItem}>\r\n                                            Familiar with Arduino and Raspberry Pi, circuits, and FPGAs.\r\n                                            </li>\r\n                                    </ul>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResumePage;","import React, { Component } from 'react';\r\nimport \"./styles/projectitem.css\";\r\nimport { Modal, Grid, Button, Icon, Card, Reveal, Header, Image, Container } from \"semantic-ui-react\";\r\n\r\nclass ProjectItem extends Component {\r\n    //Additional will be on standalone page\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (props.thumb === true) {\r\n            this.state = {\r\n                style: {\r\n                    fontSize: \"1em\",\r\n                    height: \"14em\",\r\n                    width: \"14em\"\r\n                },\r\n                showDetails: false,\r\n                sel: 1\r\n            };\r\n        } else {\r\n            this.state = {\r\n                style: {\r\n                    width: \"100%\",\r\n                    height: \"30em\"\r\n                },\r\n                sel: 1,\r\n                showDetails: false\r\n            };\r\n        }\r\n\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.renderThumb = this.renderThumb.bind(this);\r\n        this.renderNotThumb = this.renderNotThumb.bind(this);\r\n        this.showDetails = this.showDetails.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n        this.moveSelect = this.moveSelect.bind(this);\r\n        this.chooseImage = this.chooseImage.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.del(this.props.i);\r\n        this.handleClose();\r\n    }\r\n\r\n    showDetails() {\r\n        this.detailsModal.handleOpen();\r\n    }\r\n\r\n    renderNotThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return null;\r\n        } else {\r\n            return el.content;\r\n        }\r\n    }\r\n    renderThumb(el) {\r\n        if (this.props.thumb === true) {\r\n            return el.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    moveSelect(x) {\r\n        var temp;\r\n        if (x) {\r\n            if (this.state.sel < 3) {\r\n                temp = this.state.sel + 1;\r\n                this.setState({\r\n                    sel: temp\r\n                });\r\n            }\r\n        } else {\r\n            if (this.state.sel > 1) {\r\n                temp = this.state.sel - 1;\r\n                this.setState({\r\n                    sel: temp\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    chooseImage(x) {\r\n        if (x === 1) {\r\n            return <Image style={{ height: \"20em\", width: \"50em\", backgroundColor: \"whitesmoke\", objectFit: \"contain\" }} src={this.props.image1} centered fluid></Image>;\r\n        } else if (x === 2) {\r\n            return <Image style={{ height: \"20em\", width: \"50em\", backgroundColor: \"whitesmoke\", objectFit: \"contain\" }} src={this.props.image2} centered fluid></Image>;\r\n        } else if (x === 3) {\r\n            return <Image style={{ height: \"20em\", width: \"50em\", backgroundColor: \"whitesmoke\", objectFit: \"contain\" }} src={this.props.image3} centered fluid></Image>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectItem\" style={this.state.style}>\r\n                <Grid centered>\r\n                    <this.renderThumb style={{ height: \"inherit\" }} content={\r\n                        <div>\r\n                            <h2><Header>{this.props.title}</Header></h2>\r\n                            <Image style={{ height: \"10em\", width: \"90%\", objectFit: \"contain\" }} id=\"image\" src={this.props.image1} fluid centered></Image>\r\n                            <Card.Meta>\r\n                                {this.props.date}\r\n                            </Card.Meta>\r\n                        </div>\r\n                    }></this.renderThumb>\r\n                    <this.renderNotThumb content={\r\n                        <div>\r\n                            <Grid>\r\n                                <Grid.Column width={10}>\r\n                                    <Grid columns=\"equal\" verticalAlign='middle' style={{ width: \"100%\" }}>\r\n                                        <Grid.Row centered>\r\n                                            <h1><Header>{this.props.title}</Header></h1>\r\n                                            {this.chooseImage(this.state.sel)}\r\n                                            <Card.Meta>\r\n                                                {this.props.date}\r\n                                            </Card.Meta>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row>\r\n                                            <Grid.Column style={{ textAlign: \"center\" }}>\r\n                                                <a onClick={() => { this.moveSelect(false) }} style={{ height: \"100%\" }}><Icon name=\"arrow left\" size=\"massive\"></Icon></a>\r\n                                            </Grid.Column>\r\n                                            <Grid.Column style={{ textAlign: \"center\" }} >\r\n                                                <a onClick={() => { this.moveSelect(true) }} style={{ minHeight: \"100%\" }}><Icon name=\"arrow right\" size=\"massive\" style={{ height: \"100%\" }}></Icon></a>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Grid.Column>\r\n                                <Grid.Column width={6}>\r\n                                    <Grid.Row>\r\n                                        <Header as=\"h3\" content=\"Description\"></Header>\r\n                                        <p>{this.props.body}</p>\r\n                                    </Grid.Row>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </div>\r\n                    }></this.renderNotThumb>\r\n                    <this.renderNotThumb content={\r\n                        <this.adminView content={\r\n                            <Modal style={{ width: \"20vw\" }}\r\n                                trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"red\">Delete Post&nbsp;<Icon name='minus' /></Button></Grid.Row>}\r\n                                open={this.state.modalOpen}\r\n                                onClose={this.handleClose}>\r\n                                <Modal.Header>Delete Post</Modal.Header>\r\n                                <Modal.Content>\r\n                                    <Grid columns=\"equal\">\r\n                                        <Grid.Row centered>\r\n                                            Are you SURE?\r\n                                                </Grid.Row>\r\n                                        <Grid.Row centered>\r\n                                            <Button onClick={this.deletePost} style={{ textAlign: \"center\" }} color=\"orange\">Confirm&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        }></this.adminView>\r\n                    }></this.renderNotThumb>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectItem;","import React, { Component } from 'react';\r\nimport \"./styles/projectspage.css\";\r\nimport backendLink from \"../backendLink\";\r\nimport ProjectItem from \"./projectitem\";\r\nimport { Button, Icon, Modal, Grid, Input, TextArea, Header, List, Segment, Rail, Container } from 'semantic-ui-react'\r\nimport $ from 'jquery';\r\n\r\nclass ProjectPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            selected: 0,\r\n            title: '',\r\n            image1: '',\r\n            image2: '',\r\n            image3: '',\r\n            description: '',\r\n            date: '',\r\n            repo: '',\r\n            modalOpen: false\r\n        };\r\n        this.savePost = this.savePost.bind(this);\r\n        this.updateTit = this.updateTit.bind(this);\r\n        this.updateImg1 = this.updateImg1.bind(this);\r\n        this.updateImg2 = this.updateImg2.bind(this);\r\n        this.updateImg3 = this.updateImg3.bind(this);\r\n        this.updateDes = this.updateDes.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.updateRepo = this.updateRepo.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n        this.CurrentItem = this.CurrentItem.bind(this);\r\n        this.adminView = this.adminView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(backendLink.BackendIP)\r\n        $('html, body').animate({\r\n            scrollTop: $(\".ProjectsPage\").offset().top\r\n        });\r\n        this.load();\r\n    }\r\n\r\n    async load() {\r\n        var result = [];\r\n        var temp = await fetch(backendLink.BackendIP + \"/projects\")\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(function (res) {\r\n                return res.project;\r\n            });\r\n\r\n        for (var i = 0; i < temp.length; i++) {\r\n            result.push(\r\n                { title: temp[i].title, description: temp[i].body, additional: temp[i].additional, image1: temp[i].image1, image2: temp[i].image2, image3: temp[i].image3, date: temp[i].date, repo: temp[i].date, _id: temp[i]._id }\r\n            );\r\n        }\r\n        this.setState({\r\n            items: result\r\n        });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n    }\r\n\r\n    async post() {\r\n        var res = await fetch(backendLink.BackendIP + \"/projects\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                project: {\r\n                    title: this.state.title,\r\n                    body: this.state.description,\r\n                    additional: '-default',\r\n                    image1: this.state.image1,\r\n                    image2: this.state.image2,\r\n                    image3: this.state.image3,\r\n                    date: this.state.date,\r\n                    repo: this.state.repo\r\n                }\r\n            })\r\n        });\r\n        var data = await res.json();\r\n        return data;\r\n    }\r\n\r\n    savePost() {\r\n        this.post().then(data => {\r\n            var temp = this.state.items;\r\n            temp.push({ title: this.state.title, description: this.state.description, additional: \"-default\", image1: this.state.image1, image2: this.state.image2, image3: this.state.image3, date: this.state.date, repo: this.state.repo, _id: data._id });\r\n            this.setState({\r\n                items: temp\r\n            });\r\n            this.setState({ selected: this.state.items.length - 1 });\r\n        });\r\n        this.handleClose();\r\n    }\r\n\r\n    updateTit(e) {\r\n        this.setState({ title: e.target.value });\r\n    }\r\n    updateImg1(e) {\r\n        this.setState({ image1: e.target.value });\r\n    }\r\n    updateImg2(e) {\r\n        this.setState({ image2: e.target.value });\r\n    }\r\n    updateImg3(e) {\r\n        this.setState({ image3: e.target.value });\r\n    }\r\n    updateRepo(e) {\r\n        this.setState({ repo: e.target.value });\r\n    }\r\n    updateDes(e) {\r\n        this.setState({ description: e.target.value });\r\n    }\r\n    updateDate(e) {\r\n        this.setState({ date: e.target.value });\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    handleOpen() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n\r\n    deletePost(x) {\r\n        var temp = this.state.items;\r\n        var delID = temp.splice(x, 1)[0]._id;\r\n        this.setState({ items: temp });\r\n        this.setState({ selected: this.state.items.length - 1 });\r\n        fetch('http://localhost:3001/projects/' + delID, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n    }\r\n\r\n    selectItem(x) {\r\n        console.log(x);\r\n        this.setState({ selected: x });\r\n    }\r\n\r\n    CurrentItem(props) {\r\n        if (this.state.selected < 0) {\r\n            this.setState({\r\n                selected: 0\r\n            });\r\n        }\r\n        if (props.x > 0) {\r\n            return <ProjectItem\r\n                i={this.state.selected}\r\n                title={this.state.items[this.state.selected].title}\r\n                body={this.state.items[this.state.selected].description}\r\n                additional=\"-default\"\r\n                image1={this.state.items[this.state.selected].image1}\r\n                image2={this.state.items[this.state.selected].image2}\r\n                image3={this.state.items[this.state.selected].image3}\r\n                date={this.state.items[this.state.selected].date}\r\n                repo={this.state.items[this.state.selected].repo}\r\n                del={this.deletePost} thumb={false}\r\n                admin={this.props.admin}>\r\n            </ProjectItem>;\r\n        } else {\r\n            return <h1>No items</h1>;\r\n        }\r\n    }\r\n\r\n    selectTrigger() {\r\n        if (this.props.thumb) {\r\n            return null;\r\n        } else {\r\n            return <Grid.Row centered><Button onClick={this.handleOpen} color=\"blue\">Details&nbsp;</Button></Grid.Row>;\r\n        }\r\n    }\r\n\r\n    adminView(x) {\r\n        if (this.props.admin === true) {\r\n            return x.content;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectsPage\">\r\n                <Grid divided=\"vertically\">\r\n                    <Grid.Row>\r\n                        <h1><Header>Projects</Header></h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row style={{ paddingBottom: \"5em\" }}>\r\n                        <this.CurrentItem x={this.state.items.length}></this.CurrentItem>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Header textAlign=\"left\" style={{ paddingTop: \"0.7em\", paddingBottom: \"0em\" }} content=\"All Projects\"></Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <List horizontal>\r\n                                    {this.state.items.slice(0).reverse().map(function (item, index) {\r\n                                        return <List.Item style={{ marginLeft: \"0\", marginRight: \"1em\" }} key={index}><a onClick={() => { this.selectItem(this.state.items.length - index - 1) }}><Segment><ProjectItem key={index} i={index} title={item.title} body={item.description} additional=\"-default\" image1={item.image1} image2={item.image2} image3={item.image3} date={item.date} del={this.deletePost} thumb={true} sel={this.state.selected} select={this.selectItem} admin={false}></ProjectItem></Segment></a></List.Item>;\r\n                                    }.bind(this))}\r\n                                </List>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <this.adminView content={\r\n                            <Modal\r\n                                trigger={<Grid.Row centered><Button onClick={this.handleOpen} color=\"green\">New Post&nbsp;<Icon name='plus' /></Button></Grid.Row>}\r\n                                open={this.state.modalOpen}\r\n                                onClose={this.handleClose}>\r\n                                <Modal.Header>New Project</Modal.Header>\r\n                                <Modal.Content>\r\n                                    <Grid columns=\"equal\">\r\n                                        <Grid.Row centered>\r\n                                            <Grid.Column>\r\n                                                Project Title: <Input value={this.state.title} onChange={this.updateTit} placeholder=\"Title...\"></Input>\r\n                                            </Grid.Column>\r\n                                            <Grid.Column>\r\n                                                <Grid>\r\n                                                    <Grid.Row>\r\n                                                        Image1URL: <Input value={this.state.image1} onChange={this.updateImg1} placeholder=\"URL...\"></Input>\r\n                                                    </Grid.Row>\r\n                                                    <Grid.Row>\r\n                                                        Image2URL: <Input value={this.state.image2} onChange={this.updateImg2} placeholder=\"URL...\"></Input>\r\n                                                    </Grid.Row>\r\n                                                    <Grid.Row>\r\n                                                        Image3URL: <Input value={this.state.image3} onChange={this.updateImg3} placeholder=\"URL...\"></Input>\r\n                                                    </Grid.Row>\r\n                                                    <Grid.Row>\r\n                                                        Repo: <Input value={this.state.repo} onChange={this.updateRepo} placeholder=\"URL...\"></Input>\r\n                                                    </Grid.Row>\r\n                                                    <Grid.Row>\r\n                                                        Date: <Input value={this.state.date} onChange={this.updateDate} placeholder=\"YYYY[-YYYY]\"></Input>\r\n                                                    </Grid.Row>\r\n                                                </Grid>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row centered>\r\n                                            <TextArea value={this.state.description} onChange={this.updateDes} placeholder=\"Description...\" style={{ minWidth: \"100%\", maxWidth: \"100%\", minHeight: \"10vw\", maxHeight: \"10vw\" }}></TextArea>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row centered>\r\n                                            <Button onClick={this.savePost} style={{ textAlign: \"center\" }} color=\"green\">Save&nbsp;&nbsp;&nbsp;<Icon name='check' /></Button>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        }></this.adminView>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport default ProjectPage;","import React, { Component } from 'react';\r\nimport \"./styles/footer.css\";\r\nimport { Grid, Segment, Container, Header, List, Divider, Image } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        $('html, body').animate({\r\n            scrollTop: $(\".Footer\").offset().top\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const back = {\r\n            backgroundColor: \"#1b1c1d\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"Footer\">\r\n                <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\r\n                    <Container textAlign='center'>\r\n                        <Grid divided inverted stackable>\r\n                            <Grid.Column width={3}>\r\n                                <Header inverted as='h4' content='Useful Resources' />\r\n                                <List link inverted>\r\n                                    <List.Item as='a' href=\"https://www.w3schools.com/\">W3Schools</List.Item>\r\n                                    <List.Item as='a' href=\"https://stackoverflow.com/\">StackOverflow</List.Item>\r\n                                    <List.Item as='a' href=\"https://codepen.io/\">CodePen</List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={3}>\r\n                                <Header inverted as='h4' content='Cool Stuff' />\r\n                                <List link inverted>\r\n                                    <List.Item as='a' href=\"https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA\">Computerphile</List.Item>\r\n                                    <List.Item as='a' href=\"https://www.youtube.com/channel/UCIB5XXHNAWWzTOw6guIMYCg\">Harry's Garage</List.Item>\r\n                                    <List.Item as='a' href=\"https://www.twitch.tv/\">Twitch</List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={3}>\r\n                                <Header inverted as='h2' content='Contact' />\r\n                                <List link inverted>\r\n                                    <List.Item as='a' href=\"https://github.com/JonathanHay\">Github</List.Item>\r\n                                    <List.Item as='a' href=\"https://www.linkedin.com/in/jonathan-hay-82885a180/\">LinkedIn</List.Item>\r\n                                    <List.Item as='a' href=\"https://mail.google.com/mail/?view=cm&fs=1&to=jonathanhay0938@gmail.com&su=Referred by Website&body=Hi Jonathan, I need your help!\">Gmail</List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={7}>\r\n                                <Header inverted as='h4' content='Thanks for Reading!' />\r\n                                <p>\r\n                                    Feel free to contact me if you have an inquiries!\r\n                                </p>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n\r\n                        <Divider inverted section />\r\n                        <Image centered size='tiny' src='/icon.png' />\r\n                        <List horizontal inverted divided link size='small'>\r\n                            <List.Item as='a' href='#'>\r\n                                Site Map\r\n                            </List.Item>\r\n                            <List.Item as='a' onClick={function () { window.location.reload(); }}>\r\n                                Reload\r\n                            </List.Item>\r\n                            <List.Item >\r\n                                &copy; Jonathan Hay 2019\r\n                             </List.Item>\r\n                        </List>\r\n                    </Container>\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import firebase from 'firebase'\r\nconst config = {\r\n    apiKey: \"AIzaSyB9ieLlX-NqBljeb1lc8euARVnGqGtwnlc\",\r\n    authDomain: \"hayweb-aba80.firebaseapp.com\",\r\n    databaseURL: \"https://hayweb-aba80.firebaseio.com\",\r\n    projectId: \"hayweb-aba80\",\r\n    storageBucket: \"hayweb-aba80.appspot.com\",\r\n    messagingSenderId: \"1026237608417\",\r\n    appId: \"1:1026237608417:web:974274154b45b993\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport { Menu, Button, Container, Header, Modal, Grid, Form, Segment, Message } from 'semantic-ui-react'\r\nimport AboutPage from \"./aboutpage\";\r\nimport NewsPage from \"./newspage\";\r\nimport ResumePage from \"./resumepage\";\r\nimport ProjectsPage from \"./projectspage\";\r\nimport Footer from \"./footer\";\r\nimport $ from 'jquery';\r\nimport firebase, { auth, provider } from './firebase.js';\r\nimport \"./styles/nav.css\";\r\n\r\nclass Nav extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sel: 0,\r\n            modalOpen: false,\r\n            user: null,\r\n            admin: false,\r\n            email: \"\",\r\n            password: \"\",\r\n            errorMessage: null\r\n        };\r\n        this.handleButton = this.handleButton.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.displayUser = this.displayUser.bind(this);\r\n        this.updateE = this.updateE.bind(this);\r\n        this.updateP = this.updateP.bind(this);\r\n        this.displayError = this.displayError.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged((u) => {\r\n            if (u) {\r\n                this.setState({\r\n                    user: u,\r\n                    admin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleButton(x) {\r\n        this.setState({\r\n            sel: x\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            modalOpen: true\r\n        });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            modalOpen: false\r\n        });\r\n    }\r\n    login() {\r\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then((result) => {\r\n            const u = result.user;\r\n            this.setState({\r\n                user: u,\r\n                admin: true\r\n            });\r\n            this.closeModal();\r\n        }).catch(e => {\r\n            this.setState({\r\n                errorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    logout() {\r\n        auth.signOut().then(() => {\r\n            this.setState({\r\n                user: null,\r\n                admin: false\r\n            });\r\n        });\r\n    }\r\n\r\n    renderLogin() {\r\n        if (this.state.user === null) {\r\n            return <Button onClick={this.openModal} inverted>Login</Button>\r\n        } else {\r\n            return <Button onClick={this.logout} inverted>Logout</Button>;\r\n        }\r\n    }\r\n\r\n    displayUser() {\r\n        if (this.state.user === null) {\r\n            return null;\r\n        } else {\r\n            return <Menu.Item >Logged in as {this.state.user.email}</Menu.Item>\r\n        }\r\n    }\r\n\r\n    displayError() {\r\n        if (this.state.errorMessage === null) {\r\n            return null;\r\n        } else {\r\n            return <Message negative><Message.Header>Login Failed.</Message.Header><p>{this.state.errorMessage}</p></Message>;\r\n        }\r\n\r\n    }\r\n\r\n    updateE(e) {\r\n        this.setState({ email: e.target.value });\r\n    }\r\n    updateP(e) {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        var para = <AboutPage but={this.handleButton}></AboutPage>;\r\n        if (this.state.sel === 0) {\r\n            para = <AboutPage but={this.handleButton}></AboutPage>;\r\n        } else if (this.state.sel === 1) {\r\n            para = <NewsPage admin={this.state.admin}></NewsPage>;\r\n        } else if (this.state.sel === 2) {\r\n            para = <ProjectsPage admin={this.state.admin}></ProjectsPage>;\r\n        } else if (this.state.sel === 3) {\r\n            para = <ResumePage></ResumePage>;\r\n        } else if (this.state.sel === 4) {\r\n            $('html, body').animate({\r\n                scrollTop: $(\".Footer\").offset().top\r\n            });\r\n        }\r\n\r\n        var modal =\r\n            <Modal\r\n                basic\r\n                trigger={this.renderLogin()}\r\n                open={this.state.modalOpen}\r\n                onClose={this.closeModal}\r\n                closeIcon\r\n                style={{ width: \"38em\" }}\r\n            >\r\n                <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='teal' textAlign='center'>\r\n                            Administrator Login\r\n                        </Header>\r\n                        <Form size='large'>\r\n                            <Segment stacked>\r\n                                <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={this.state.email} onChange={this.updateE} />\r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Password'\r\n                                    type='password'\r\n                                    value={this.state.password}\r\n                                    onChange={this.updateP}\r\n                                />\r\n                                {this.displayError()}\r\n                                <Button onClick={this.login} color='teal' fluid size='large'>\r\n                                    Login\r\n                                </Button>\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Modal>\r\n            ;\r\n\r\n        return (\r\n\r\n            <div className=\"Nav\">\r\n                <div id=\"masthead\">\r\n                    <Container style={{ display: \"table\", fontSize: \"3vw\" }}>\r\n                        <Header style={{ verticalAlign: \"middle\", display: \"table-cell\", height: \"20vw\" }} inverted size=\"huge\">Jonathan Hay</Header>\r\n                    </Container>\r\n                </div>\r\n                <div id=\"main\">\r\n                    <Container>\r\n                        <Menu inverted pointing secondary >\r\n                            <Menu.Item\r\n                                name='home'\r\n                                active={this.state.sel === 0}\r\n                                onClick={() => this.handleButton(0)}\r\n                            >\r\n                                Home\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='news'\r\n                                active={this.state.sel === 1}\r\n                                onClick={() => this.handleButton(1)}\r\n                            >\r\n                                News\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item\r\n                                name='projects'\r\n                                active={this.state.sel === 2}\r\n                                onClick={() => this.handleButton(2)}\r\n                            >\r\n                                Projects\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='resume'\r\n                                active={this.state.sel === 3}\r\n                                onClick={() => this.handleButton(3)}\r\n                            >\r\n                                Resume\r\n                            </Menu.Item>\r\n                            <Menu inverted floated=\"right\" >\r\n                                {this.displayUser()}\r\n                                {modal}\r\n                            </Menu>\r\n                        </Menu>\r\n                    </Container>\r\n                </div>\r\n                <Container id=\"content\" style={{ minHeight: \"100vh\" }}>\r\n                    {para}\r\n                </Container>\r\n                <Footer></Footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport \"./styles/pageheader.css\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass PageHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        function enter() {\r\n            document.getElementById(\"overlay\").style.opacity = \"0\";\r\n            document.getElementById(\"overlay\").style.visibility = \"hidden\";\r\n            document.getElementById(\"words\").style.visibility = \"hidden\";\r\n        }\r\n\r\n        return (\r\n            <div id=\"overlay\" className=\"PageHeader\">\r\n                <div id=\"words\">\r\n                    <span>Designer</span>\r\n                    <span>Collaborator</span>\r\n                    <span>Engineer</span>\r\n                    <span>Student</span>\r\n                </div>\r\n                <Button onClick={enter} inverted size=\"massive\" style={{ marginTop: \"30vh\" }}>Enter</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageHeader;","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from \"./components/nav\";\nimport PageHeader from \"./components/pageheader\";\nimport $ from 'jquery';\nimport { Button } from 'semantic-ui-react';\n\nclass App extends Component {\n\n  componentDidMount() {\n    $('html, body').animate({\n      scrollTop: $(\".AboutPage\").offset().top\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PageHeader></PageHeader>\n        <Nav></Nav>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}